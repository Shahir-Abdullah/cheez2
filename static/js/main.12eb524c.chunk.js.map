{"version":3,"sources":["components/ResponsiveNavigation.jsx","components/OptionsDropdown.jsx","components/Dropdown.jsx","logo.svg","components sync /^/.//.*/.jsx$","components/Chart.jsx","components/EChart.jsx","components/Line.jsx","components/PercentageBar.jsx","components/Scatter.jsx","components/Tree.jsx","pages/Home.jsx","pages/Dashboard.jsx","pages/DashboardSelector.jsx","App.js","store/DashboardReducer.js","store/RootReducer.jsx","store/Store.jsx","serviceWorker.js","index.js"],"names":["ResponsiveNavigation","navLinks","background","hoverBackground","linkColor","logo","children","useState","hoverIndex","setHoverIndex","navOpen","setNavOpen","className","style","onClick","src","height","width","alt","map","link","index","key","onMouseEnter","onMouseLeave","to","path","color","text","icon","options","visible","cb","optionMap","Object","entries","anchor","meta","dropdown","useRef","dropdownContainer","hideOnDocumentClick","useCallback","document","removeEventListener","useEffect","current","clientWidth","anchorOffset","left","addEventListener","ref","visibility","module","exports","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","Chart","config","resize","optionsVisible","setOptionsVisible","title","option","chart","chartEl","setChartEl","echarts","init","setOption","data","reduce","accum","iter","xAxis","push","yAxes","forEach","lineName","colors","tooltip","trigger","axisPointer","lineStyle","backgroundColor","padding","textStyle","extraCssText","type","boundaryGap","splitLine","show","interval","axisTick","axisLine","axisLabel","margin","fontSize","yAxis","series","trendData","name","yNames","smooth","showSymbol","symbol","symbolSize","areaStyle","normal","graphic","LinearGradient","offset","itemStyle","legend","x","formatter","polar","center","radius","angleAxis","startAngle","min","max","radiusAxis","obj","coordinateSystem","barWidth","barCategoryGap","value","triggerOn","grid","top","bottom","right","label","position","verticalAlign","align","leaves","expandAndCollapse","animationDuration","animationDurationUpdate","Home","Dashboard","dashboardName","axios","useSelector","DashboardReducer","dispatch","useDispatch","setResize","timer","setTimer","triggerResize","window","cancelAnimationFrame","requestAnimationFrame","setTimeout","passive","get","then","payload","conf","endpoint","getData","idx","component","require","default","React","createElement","DashboardSelector","dashboardList","history","class","dash","description","App","initialState","mutations","state","json","ind","rootReducer","combineReducers","Store","createStore","RootReducer","subscribe","console","log","getState","Boolean","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12eb524c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from '@reach/router'\n\nfunction ResponsiveNavigation ({ navLinks, background, hoverBackground, linkColor, logo, children }) {\n    const [ hoverIndex, setHoverIndex ] = useState(-1)\n    const [ navOpen, setNavOpen ] = useState(false)\n\n    return (\n        <nav\n            className=\"responsive-toolbar\"\n            style={{ background }}>\n            <ul\n                style={{ background }}\n                className={ navOpen ? 'active' : '' }>\n                <figure onClick={ () => setNavOpen(!navOpen) }>\n                    <img src={logo} height=\"40px\" width=\"40px\" alt=\"logo-nav-toggler\"/>\n                </figure>\n                {navLinks.map((link, index) => \n                    <li\n                        key={index}\n                        onMouseEnter={ () => setHoverIndex(index) }\n                        onMouseLeave={ () => setHoverIndex(-1) }\n                        style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\n                    >\n                        <Link\n                            to={link.path}\n                            style={{ color: linkColor }}\n                        >\n                            { link.text }\n                            <i className={link.icon} />\n                        </Link>\n                    </li>    \n                )}\n                { children }\n            </ul>\n        </nav>\n    )\n}\n\nexport default ResponsiveNavigation","import React from 'react'\nimport Dropdown from './Dropdown'\n\nexport default ({ children, options, visible, cb }) => {\n\n    let optionMap = Object.entries(options)\n\n    return (\n        <Dropdown\n            anchor={ children }\n            visible={ visible }\n            cb={ cb }\n        >\n            <ul className=\"options-list\">\n                {   optionMap.map(([text, meta]) => \n                        <li\n                            key={text}\n                            className=\"option-option\"\n                            onClick={ () => meta.cb() }\n                        >\n                            <span>{text}</span>\n                            <i className={meta.icon} />\n                        </li>\n                    )\n                }\n            </ul>\n        </Dropdown>\n    )\n}","import React, { useEffect, useRef, useCallback } from 'react'\n\nexport default ({ children, anchor, visible, cb }) => {\n    let dropdown = useRef(null)\n    let dropdownContainer = useRef(null)\n\n    const hideOnDocumentClick = useCallback(() => {\n        if (visible) {\n            cb()\n            document.removeEventListener('click', hideOnDocumentClick)\n        }\n    }, [visible, cb])\n\n    useEffect(() => {\n        let { clientWidth, style } = dropdown.current\n        let anchorOffset = dropdownContainer.current.clientWidth\n        style.left =  (clientWidth - anchorOffset) * -1 + 'px'\n\n        visible ? document.addEventListener('click', hideOnDocumentClick)\n            : document.removeEventListener('click', hideOnDocumentClick)\n    }, [visible, hideOnDocumentClick]);\n\n    return (\n        <div className=\"dropdown-container\" ref={dropdownContainer}>\n            { anchor }\n            <div style={{ visibility: visible ? 'visible' : 'hidden' }} className=\"dropdown\" ref={dropdown} >\n                { children }\n            </div>\n        </div>\n    )\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var map = {\n\t\"./Chart.jsx\": 32,\n\t\"./Dropdown.jsx\": 137,\n\t\"./EChart.jsx\": 33,\n\t\"./Line.jsx\": 546,\n\t\"./OptionsDropdown.jsx\": 136,\n\t\"./PercentageBar.jsx\": 547,\n\t\"./ResponsiveNavigation.jsx\": 134,\n\t\"./Scatter.jsx\": 548,\n\t\"./Tree.jsx\": 549\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 251;","import React, { useState } from 'react'\nimport OptionsDropdown from './OptionsDropdown'\n\nexport default function Chart ({ children, config, resize }) {\n\n    const { height, width } =  { ...config }\n\n    const [optionsVisible, setOptionsVisible] = useState(false)\n\n    let options =  {\n        'FullScreen': {\n            icon: 'ion-ios-expand',\n            cb: () => {\n                // TODO\n            }\n        },\n        'Export to CSV': {\n            icon: 'ion-ios-filing',\n            cb: () => {\n                // TODO\n            }\n        }\n    }\n\n    return (\n        <section className=\"chart\" style={{ height, width }}>\n            <section className=\"chart-header-container\">\n                <span>{ config.title }</span>\n                <span className=\"options-container\">\n                    <OptionsDropdown\n                        options={ options }\n                        visible={ optionsVisible }\n                        cb={ () => setOptionsVisible(false) }\n                    >\n                        <i\n                            className=\"ion-ios-more\"\n                            onClick={ () => setOptionsVisible(!optionsVisible) }\n                        />\n                    </OptionsDropdown>\n                </span>\n            </section>\n            { children }\n        </section>\n    )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport echarts from 'echarts'\n\nexport default ({ option, resize }) => {\n\n    let chart = useRef(null)\n    let [chartEl, setChartEl] = useState(chart)\n\n    useEffect(() => {\n        if (resize) {\n            chartEl.resize()\n        }\n        if (!chartEl.current) {\n            chartEl.setOption(option)\n        }\n        else {\n            // console.log(resizeChart)\n            setChartEl(echarts.init(chart.current))\n        }\n    }, [option, chartEl, resize])\n\n    return (\n        <div className=\"chart\" ref={chart}></div>\n    )\n}","import React from 'react'\nimport echarts from 'echarts'\nimport EChart from './EChart'\nimport Chart from './Chart'\n\nexport default ({ config, resize }) => {\n\n    const { data } = config // destructuring a property value from an object\n\n    let { xAxis, yAxes } = data.reduce((accum, iter) => {\n        // \n        accum.xAxis.push(iter[config.xAxis])\n        config.yAxes.forEach((lineName, index) => {\n            if (!accum.yAxes[index]) {\n                accum.yAxes.push([iter[config.yAxes[index]]])\n            } else accum.yAxes[index].push(iter[config.yAxes[index]])\n        })\n        return accum\n    }, { xAxis: [], yAxes: []})\n\n    let colors = ['#2d8cf0', '#FFD60A', '#BF5AF2', '#FF443A', '#FF9F0C', '#31D158']\n\n    let option = {\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                lineStyle: {\n                    color: '#ddd'\n                }\n            },\n            backgroundColor: 'rgba(255,255,255,1)',\n            padding: [5, 10],\n            textStyle: {\n                color: '#7588E4',\n            },\n            extraCssText: 'box-shadow: 0 0 5px rgba(0,0,0,0.3)'\n        },\n        xAxis: {\n            type: 'category',\n            data: xAxis,\n            boundaryGap: false,\n            splitLine: {\n                show: true,\n                interval: 'auto',\n                lineStyle: {\n                    color: ['#D4DFF5']\n                }\n            },\n            axisTick: {\n                show: false\n            },\n            axisLine: {\n                lineStyle: {\n                    color: '#609ee9'\n                }\n            },\n            axisLabel: {\n                margin: 10,\n                textStyle: {\n                    fontSize: 14\n                }\n            }\n        },\n        yAxis: {\n            type: 'value',\n            splitLine: {\n                lineStyle: {\n                    color: ['#D4DFF5']\n                }\n            },\n            axisTick: {\n                show: false\n            },\n            axisLine: {\n                lineStyle: {\n                    color: '#609ee9'\n                }\n            },\n            axisLabel: {\n                margin: 10,\n                textStyle: {\n                    fontSize: 14\n                }\n            }\n        },\n        series: yAxes.map((trendData, index) => ({\n            name: config.yNames[index],\n            type: 'line',\n            smooth: true,\n            showSymbol: false,\n            symbol: 'circle',\n            symbolSize: 6,\n            data: trendData,\n            areaStyle: {\n                normal: {\n                    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                        offset: 0,\n                        color: colors[index]\n                    }, {\n                        offset: 1,\n                        color: 'rgba(199, 237, 250,0.2)'\n                    }], false)\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: colors[index]\n                }\n            },\n            lineStyle: {\n                normal: {\n                    width: 3\n                }\n            }\n        }))\n    }\n\n    return (\n    <Chart config={config} resize={resize}>\n        { data &&\n            <EChart option={ option } config={ config } resize={resize}/>\n        }\n    </Chart>\n    )\n}","import React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart'\n\nexport default ({ config, resize }) => {\n\n    const { data } = config\n\n    const colors = ['#2d8cf0', '#FFD60A', '#BF5AF2', '#FF443A', '#FF9F0C', '#31D158']\n\n    let option = {\n        color: colors,\n    \n        legend: {\n            x: 'center',\n        },\n        tooltip: {\n            show: true,\n            trigger: 'item',\n            formatter: \"{a} : <br />{c}%\",\n        },\n        polar: {\n            center: ['50%', '50%'],\n            radius: '150%'\n        },\n        angleAxis: {\n            show: false,\n            startAngle: 90,\n            min: 0,\n            max: 100\n        },\n        radiusAxis: {\n            type: 'category',\n            show: false,\n            data: [\"4级权重媒体\", \"3级权重媒体\", \"5级权重媒体\"]\n        },\n        series: data.map(obj => ({\n            type: \"bar\",\n            name: obj.title,\n            coordinateSystem: \"polar\",\n            barWidth: 20,\n            barCategoryGap: \"30%\",\n            data: [obj.value]\n        }))\n    }\n\n    return (\n        <Chart config={config} resize={resize}>\n            { data &&\n                <EChart option={ option } config={ config } resize={resize}/>\n            }\n        </Chart>\n    )\n}","import React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart'\n\nexport default ({ config, resize }) => {\n    const { data } = config\n    \n    \n    let option = {\n        xAxis: {},\n        yAxis: {},\n        series: [{\n            symbolSize: 10,\n            data: [\n                [1, 8],\n                [1, 5],\n                [1, 11],\n                [1, 25],\n                [2, 6],\n                [2, 11],\n                [2, 16],\n                [2, 18],\n                [2, 14],\n                [2, 21],\n                [3, 26],\n                [4, 8],\n                [5, 9],\n                [6, 10],\n                [7, 7],\n                [7, 1],\n                [7, 2],\n                [7, 3],\n                [7, 4],\n                [8, 11],\n                [3, 7],\n                [4, 8],\n                [5, 8],\n                [6, 9],\n                [7, 7],\n                [8, 4],\n                [9, 10],\n                [10, 4],\n                [11, 5],\n                [12, 2],\n                [1, 23] \n            ],\n            type: 'scatter'\n        }]\n    };\n    \n\n    return (\n        <Chart config={config} resize={resize}>\n            { data &&\n                <EChart option={ option } config={ config } resize={resize}/>\n            }\n        </Chart>\n    )\n   \n   \n}","import React from 'react'\nimport Chart from './Chart'\nimport EChart from './EChart'\n\nexport default ({ config, resize }) => {\n    const { data } = config\n\n    let option = {\n        tooltip: {\n            trigger: 'item',\n            triggerOn: 'mousemove'\n        },\n        grid: {\n            left: '10%'\n        },\n        series: [\n            {\n                type: 'tree',\n\n                data: [data],\n\n                top: '1%',\n                left: config.left,\n                bottom: '1%',\n                right: '20%',\n\n                symbolSize: 7,\n\n                label: {\n                    normal: {\n                        position: 'left',\n                        verticalAlign: 'middle',\n                        align: 'right',\n                        fontSize: 9\n                    }\n                },\n\n                leaves: {\n                    label: {\n                        normal: {\n                            position: 'right',\n                            verticalAlign: 'middle',\n                            align: 'left'\n                        }\n                    }\n                },\n\n                expandAndCollapse: true,\n                animationDuration: 550,\n                animationDurationUpdate: 750\n            }\n        ]\n    }\n\n    return (\n        <Chart config={config} resize={resize}>\n            { data &&\n                <EChart option={ option } config={ config } resize={resize}/>\n            }\n        </Chart>\n    )\n}","import React from \"react\";\n\nexport default function Home() {\n  return <div>Cheez Home</div>;\n}\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport default function Dashboard ({ dashboardName, axios }) {\n    const config = useSelector(({ DashboardReducer }) => DashboardReducer.config)\n    const dispatch = useDispatch()\n    let [resize, setResize] = useState(false)\n    let [timer, setTimer] = useState(0)\n\n    const triggerResize = useCallback(() => {\n        if (timer) {\n            window.cancelAnimationFrame(timer);\n        }\n        // Debounce the window resize event\n        setTimer(window.requestAnimationFrame(function () {\n            setResize(true)\n            setTimeout(() => {\n                setResize(false)\n            }, 0)\n        }));\n        \n    },[setResize, timer])\n\n    useEffect(() => {\n        window.addEventListener('resize', triggerResize, { passive: true })\n        axios.get(`/api/dashboard/${dashboardName}`)\n        .then(({ data }) => {\n            dispatch({\n                type: 'SET_CONFIG',\n                payload: data\n            })\n            \n            const getData = ({ endpoint }, index) => {\n                axios.get(endpoint)\n                .then(({ data }) => {\n                    dispatch({\n                        type: 'SET_DATA',\n                        payload: [index, data]\n                    })\n                })\n            }\n\n            data.forEach((conf, index) => {\n                getData(conf, index)\n            })\n        })\n        return () => {\n            window.removeEventListener('resize', triggerResize, { passive: true })\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <section className=\"dashboard\">\n            {\n                config && config.map((conf, idx) => {\n                    const component = require(`../components/${conf.type}.jsx`).default\n                    return conf.data ? React.createElement(component, { config: conf, key: idx, resize }) : ''\n                })\n            }\n        </section>\n    )\n}","import React, {useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link } from \"@reach/router\";\n\nexport default function DashboardSelector ({ axios, history }) {\n    const dashboardList = useSelector(({DashboardReducer}) => DashboardReducer.dashboardList)\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        axios.get(`/api/dashboard-list`)\n        .then(({ data }) => {\n\n            dispatch({\n                type: 'SET_DASHBOARD_LIST',\n                payload: data\n            })\n        })\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <section class=\"dashboard-selector\">\n            {dashboardList && dashboardList.map(dash => (\n                <Link to={`/analytics/${dash.path}`}\n                    class=\"dashboard-card\"\n                >\n                    <h3 class=\"dash-title\">{dash.title}</h3>\n                    <p class=\"dash-description\">{dash.description}</p>\n                </Link>\n            ))}\n        </section>\n    )\n}","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { Router } from \"@reach/router\";\nimport Home from \"./pages/Home\";\nimport ResponsiveNavigation from \"./components/ResponsiveNavigation\";\nimport Dashboard from \"./pages/Dashboard\";\nimport DashboardSelector from \"./pages/DashboardSelector\";\nimport \"./assets/scss/base.scss\";\nimport \"./App.css\";\nimport axios from \"axios\";\nif (process.env.NODE_ENV === \"development\") {\n  require(\"./assets/mock-endpoints/mocks\");\n}\n\nfunction App() {\n  const navLinks = [\n    {\n      text: \"Home\",\n      path: \"/\",\n      icon: \"ion-ios-home\",\n    },\n    {\n      text: \"Analytics\",\n      path: \"/analytics\",\n      icon: \"ion-ios-analytics\",\n    },\n  ];\n  return (\n    <div className=\"App\">\n      <ResponsiveNavigation\n        navLinks={navLinks}\n        logo={logo}\n        background=\"#fff\"\n        hoverBackground=\"#ddd\"\n        linkColor=\"#777\"\n      ></ResponsiveNavigation>\n      <Router>\n        <Home path=\"/\" />\n        <Dashboard axios={axios} path=\"/analytics/:dashboardName\" />\n        <DashboardSelector axios={axios} path=\"/analytics\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n    config: [],\n}\n\nconst mutations = {\n    'SET_DATA': (state, [index, json]) => {\n        return {\n            ...state,\n            config: state.config.map((conf, ind) => {\n                if (ind === index) conf['data'] = json\n                return conf\n            })\n        }\n    },\n    'SET_CONFIG': (state, config) => {\n        return {\n            ...state,\n            config\n        }\n    },\n    'SET_DASHBOARD_LIST': (state, dashboardList) => {\n        return {\n            ...state,\n            dashboardList\n        }\n    }\n}\n\nconst DashboardReducer = (state = initialState, { type, payload }) => {\n    if (mutations[type]) {\n        return mutations[type](state, payload)\n    }\n    return { ...state }\n}\n\nexport default DashboardReducer\n","import { combineReducers } from \"redux\";\nimport DashboardReducer from \"./DashboardReducer\";\n\nconst rootReducer = combineReducers({\n  DashboardReducer\n});\n\nexport default rootReducer;","import { createStore } from \"redux\";\nimport RootReducer from \"./RootReducer\";\n\nconst Store = createStore(RootReducer);\n\nStore.subscribe(() => {\n    console.log('Store updated: ', Store.getState())\n})\n\nexport default Store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/Store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// React.prototype.$axios = axios\n"],"sourceRoot":""}